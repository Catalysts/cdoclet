#macro(cs_dimensions $dimension)
#set($foo = $dimension - 1)
#if($dimension > 0)[]#cs_dimensions($foo)#end
#end
#macro(cs_bounds $descriptor)
#foreach($arg in $descriptor.bounds.keySet()) where $arg : #cs_type($descriptor.bounds.get($arg))#end
#end
#macro(cs_generics $type)
#if($type.arguments)<#foreach($argument in $type.arguments)#if($velocityCount>1), #end#if($argument.name == "?")#cs_type($type.bounds.get("?"))#else#cs_type($argument)#end#end>#end
#end
#macro(cs_type $type)
$type.name#cs_generics($type)#cs_dimensions($type.dimensions)
#end
#macro(cs_implements $descriptor)
#if($descriptor.superClass) : #cs_type($descriptor.superClass)#foreach($interface in $descriptor.interfaces), #cs_type($interface)#end#else#foreach($interface in $descriptor.interfaces)#if($velocityCount == 1) : #{else}, #end#cs_type($interface)#end#end
#end
#macro(cs_params $descriptor)
#foreach($parameterDescriptor in $descriptor.parameterDescriptors)#if($velocityCount>1), #end#cs_type($parameterDescriptor) $parameterDescriptor.parameterName#end
#end
#macro(cs_method $descriptor)
#cs_type($descriptor) ${descriptor.upperMethodName}#cs_generics($descriptor.genericType)(#cs_params($descriptor))#cs_bounds($descriptor.genericType)
#end
#macro(cs_property $descriptor)
#cs_type($descriptor) ${descriptor.propertyName}#cs_generics($descriptor.genericType)#cs_bounds($descriptor.genericType)
#end
#macro(cs_modifiers $descriptor $default)
#foreach($annotation in $descriptor.annotations)[$annotation.name]
		#end
#if($descriptor.modifier != "")$descriptor.modifier #end#if($descriptor.override)override #elseif($default != "")$default #end
#end