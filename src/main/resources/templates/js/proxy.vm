#* @vtlvariable name="typeDescriptor" type="cc.catalysts.cdoclet.generator.velocity.TypeDescriptor" *#
#parse("templates/js/js_macros.vm")
#*
	PROXY
*#
#if($typeDescriptor.description)/**
 * $typeDescriptor.description
 */
#end
function ${typeDescriptor.typeName}($http) {
    this.$http = $http;
}

#foreach($methodDescriptor in $typeDescriptor.methodDescriptors)
#if($methodDescriptor.description)/**
 * $methodDescriptor.description
 */
#end
${typeDescriptor.typeName}.prototype.$methodDescriptor.methodName = #js_method($methodDescriptor) {
#if($methodDescriptor.async)#if($methodDescriptor.callbackType.qualifiedTypeName == "void")
    this.beginDispatchCall("${methodDescriptor.verb}", "${methodDescriptor.methodName}", #js_param_object($methodDescriptor));
#else
    this.beginDispatchCall("${methodDescriptor.verb}", "${methodDescriptor.methodName}", #js_param_object($methodDescriptor));
#end#else#if($methodDescriptor.qualifiedTypeName == "void")
    this.dispatchCall("${methodDescriptor.verb}", "${methodDescriptor.methodName}", #js_param_object($methodDescriptor));
#else
    return this.dispatchCall("${methodDescriptor.verb}", "${methodDescriptor.methodName}", #js_param_object($methodDescriptor));
#end#end
};
#end
